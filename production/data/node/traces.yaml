---
classes:
  - roles::tracing
profiles::tracing::tempo: true
profiles::tracing::tempo::compactor_config_hash:
  compactor:
    compaction:
      compaction_window: 1h              # blocks in this time window will be compacted together
      max_compaction_objects: 1000000    # maximum size of compacted blocks
      block_retention: 1h
      compacted_block_retention: 10m
profiles::tracing::tempo::distributor_config_hash:
  distributor:
    receivers:                           # this configuration will listen on all ports and protocols that tempo is capable of.
      jaeger:                            # the receives all come from the OpenTelemetry collector.  more configuration information can
        protocols:                       # be found there: https://github.com/open-telemetry/opentelemetry-collector/tree/master/receiver
          thrift_http:                   #
          grpc:                          # for a production deployment you should only enable the receivers you need!
          thrift_binary:
          thrift_compact:
      zipkin:
      otlp:
        protocols:
          http:
          grpc:
      opencensus:
profiles::tracing::tempo::ingester_config_hash:
  ingester:
    trace_idle_period: 10s               # the length of time after a trace has not received spans to consider it complete and flush it
    max_block_duration: 5m               #   this much time passes
profiles::tracing::tempo::server_config_hash:
  server:
    http_listen_port: 3100
profiles::tracing::tempo::storage_config_hash:
  storage:
    trace:
      backend: s3                     # backend configuration to use
      wal:
        path: /tmp/tempo/wal             # where to store the the wal locally
      s3:
        bucket: tempo
        endpoint: s3.observability.vagrant:9090
        access_key: admin
        secret_key: supersecret
        insecure: true
        region: us-east-1
      local:
        path: /tmp/tempo
      pool:
        max_workers: 100                 # the worker pool mainly drives querying, but is also used for polling the blocklist
        queue_depth: 10000
...
